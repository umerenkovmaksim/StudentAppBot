from aiogram import F, Router, types
from aiogram.filters import CommandStart

from bot_instance import ParseMode
from main_menu.keyboard import build_main_keyboard, build_other_keyboard, start_keyboard
from student.api import StudentAPI

main_menu_router = Router()


@main_menu_router.message(CommandStart(), flags={"auth_handler": True})
async def start(message: types.Message):
    user_id = message.from_user.id
    user = await StudentAPI.get(telegram_id=user_id)
    if user.json:
        kb = await build_main_keyboard()
        await message.answer(
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, <b>{message.from_user.first_name or message.from_user.username}</b>!",
            reply_markup=kb.as_markup(resize_keyboard=True),
        )
    else:
        text = (
            f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name or message.from_user.username}</b>!\n\n"
            "–≠—Ç–æ –±–æ—Ç –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ *–¢–∏–º–∏—Ä—è–∑–µ–≤—Å–∫–æ–π –ê–∫–∞–¥–µ–º–∏–∏* üéì\n\n"
            "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n"
            "‚Ä¢ –°–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n"
            "‚Ä¢ –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –¥–µ–ª–∏—Ç—å—Å—è –∏–º —Å –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–∞–º–∏\n"
            "‚Ä¢ –£–∑–Ω–∞–≤–∞—Ç—å –æ –≤–∞–∂–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –∏ –≤—É–∑–∞\n\n"
            "–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ"
        )

        await message.answer(
            text=text,
            reply_markup=start_keyboard.as_markup(),
        )


@main_menu_router.message(F.text == "‚ûï –î—Ä—É–≥–æ–µ")
async def other_kb(message: types.Message):
    kb = await build_other_keyboard(message.from_user.id)
    await message.answer(
        text="–î–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É `‚óÄÔ∏è –ù–∞–∑–∞–¥`",
        reply_markup=kb.as_markup(resize_keyboard=True),
        parse_mode=ParseMode.MARKDOWN,
    )


@main_menu_router.message(F.text == "‚óÄÔ∏è –ù–∞–∑–∞–¥")
async def main_kb(message: types.Message):
    kb = await build_main_keyboard()
    await message.answer(
        text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=kb.as_markup(resize_keyboard=True),
    )
